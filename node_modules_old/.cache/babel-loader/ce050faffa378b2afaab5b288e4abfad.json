{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\badih\\\\Documents\\\\Projects\\\\React\\\\badihbarakat.info\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\badih\\\\Documents\\\\Projects\\\\React\\\\badihbarakat.info\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\badih\\\\Documents\\\\Projects\\\\React\\\\badihbarakat.info\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\badih\\\\Documents\\\\Projects\\\\React\\\\badihbarakat.info\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\badih\\\\Documents\\\\Projects\\\\React\\\\badihbarakat.info\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\badih\\\\Documents\\\\Projects\\\\React\\\\badihbarakat.info\\\\src\\\\components\\\\expandabletext.jsx\";\nimport React, { Component } from 'react';\nimport '../css/expandabletext.css';\n\nvar ExpandableText =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExpandableText, _Component);\n\n  function ExpandableText() {\n    _classCallCheck(this, ExpandableText);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExpandableText).apply(this, arguments));\n  }\n\n  _createClass(ExpandableText, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          text = _this$props.text,\n          textStyle = _this$props.textStyle;\n      var sp = \"\";\n      return React.createElement(\"div\", {\n        className: textStyle ? \"expText extDivMiddle\" : \"expTextUnStyled extDivMiddle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, text.split(' ').map(function (w) {\n        console.log(w);\n        return w.split('').map(function (l, i) {\n          console.log(l, i, w.length - 1);\n\n          if (i === 0) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17\n              },\n              __self: this\n            }, l);\n          } else if (i === w.length - 1) {\n            return React.createElement(React.Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              class: \"extHidden\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23\n              },\n              __self: this\n            }, l), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24\n              },\n              __self: this\n            }, \"\\xA0\"));\n          } else {\n            return React.createElement(\"span\", {\n              class: \"extHidden\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, l);\n          }\n        });\n      }));\n    }\n  }]);\n\n  return ExpandableText;\n}(Component);\n\nexport default ExpandableText;","map":{"version":3,"sources":["C:\\Users\\badih\\Documents\\Projects\\React\\badihbarakat.info\\src\\components\\expandabletext.jsx"],"names":["React","Component","ExpandableText","props","text","textStyle","sp","split","map","w","console","log","l","i","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,2BAAP;;IAEMC,c;;;;;;;;;;;;;6BACM;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,SADT,eACSA,SADT;AAEJ,UAAIC,EAAE,GAAG,EAAT;AACA,aACI;AAAK,QAAA,SAAS,EAAED,SAAS,GAAG,sBAAH,GAA4B,8BAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQD,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAAAC,CAAC,EAAI;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,eACIA,CAAC,CAACF,KAAF,CAAQ,EAAR,EAAYC,GAAZ,CAAgB,UAACI,CAAD,EAAIC,CAAJ,EAAU;AACtBH,UAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ,EAAcC,CAAd,EAAiBJ,CAAC,CAACK,MAAF,GAAS,CAA1B;;AACA,cAAGD,CAAC,KAAK,CAAT,EAAY;AACR,mBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOD,CAAP,CAAP;AACH,WAFD,MAGK,IAAGC,CAAC,KAAKJ,CAAC,CAACK,MAAF,GAAS,CAAlB,EACL;AACI,mBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAM,cAAA,KAAK,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAyBF,CAAzB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ;AAMH,WARI,MAUL;AACI,mBAAO;AAAM,cAAA,KAAK,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAyBA,CAAzB,CAAP;AACH;AACJ,SAlBD,CADJ;AAqBH,OAvBD,CAFR,CADJ;AA2CJ;;;;EA/CyBX,S;;AAkD7B,eAAeC,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport '../css/expandabletext.css';\r\n\r\nclass ExpandableText extends Component {\r\n   render() {\r\n        const {text, textStyle} = this.props;\r\n        let sp = \"\";\r\n        return (\r\n            <div className={textStyle ? \"expText extDivMiddle\" : \"expTextUnStyled extDivMiddle\"}>\r\n                {\r\n                    text.split(' ').map(w => {\r\n                        console.log(w);\r\n                        return (\r\n                            w.split('').map((l, i) => {\r\n                                console.log(l,i, w.length-1);\r\n                                if(i === 0) {\r\n                                    return <span>{l}</span>\r\n                                }\r\n                                else if(i === w.length-1)\r\n                                {\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <span class=\"extHidden\">{l}</span>\r\n                                            <span>&nbsp;</span>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                                else\r\n                                {\r\n                                    return <span class=\"extHidden\">{l}</span>\r\n                                }\r\n                            })                     \r\n                        )\r\n                    })\r\n                }\r\n                {/* <span>B</span>\r\n                <span class=\"extHidden\">a</span>\r\n                <span class=\"extHidden\">d</span>\r\n                <span class=\"extHidden\">i</span>\r\n                <span class=\"extHidden\">h</span>\r\n                <span class=\"extHidden\">&nbsp;</span>\r\n                <span>B</span>\r\n                <span class=\"extHidden\">a</span>\r\n                <span class=\"extHidden\">r</span>\r\n                <span class=\"extHidden\">a</span>\r\n                <span class=\"extHidden\">k</span>\r\n                <span class=\"extHidden\">a</span>\r\n                <span class=\"extHidden\">t</span> */}\r\n            </div>\r\n        );\r\n   }\r\n}\r\n\r\nexport default ExpandableText;"]},"metadata":{},"sourceType":"module"}